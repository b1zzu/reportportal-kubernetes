apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: reportportal
  labels:
    app.kubernetes.io/name: postgres
spec:
  replicas: 1
  serviceName: postgresql
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
    spec:
      containers:
        - name: postgresql
          image: postgresql
          imagePullPolicy: IfNotPresent
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-user
            - name: POSTGRES_POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_POSTGRES_PASSWORD
                  name: postgres
            - name: POSTGRES_DB
              value: reportportal
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "reportportal" -d "dbname=reportportal" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          ports:
            - containerPort: 5432
              name: tcp-postgresql
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - -e
                - |
                  exec pg_isready -U "reportportal" -d "dbname=reportportal" -h 127.0.0.1 -p 5432
                  [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          resources:
            limits: { }
            requests:
              cpu: 25m
              memory: 64Mi
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /dev/shm
              name: dshm
            - mountPath: /bitnami/postgresql
              name: data
            - name: initdb
              mountPath: /docker-entrypoint-initdb.d
              readOnly: true
      securityContext:
        fsGroup: 1001
      serviceAccountName: default
      volumes:
        - emptyDir:
            medium: Memory
          name: dshm
        - name: initdb
          configMap:
            name: postgres-initdb
            items:
              - key: reportportal-initdb.sh
                path: initdb.sh
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi