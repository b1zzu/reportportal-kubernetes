apiVersion: apps/v1
kind: Deployment
metadata:
  name: reportportal-api
  labels:
    app.kubernetes.io/name: reportportal
    app.kubernetes.io/component: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: reportportal
      app.kubernetes.io/component: api
  template:
    metadata:
      labels:
        app.kubernetes.io/name: reportportal
        app.kubernetes.io/component: api
    spec:
      containers:
        - env:
            - name: LOGGING_LEVEL_ORG_HIBERNATE_SQL
              value: "info"
            - name: RP_REQUESTLOGGING
              value: "false"
            - name: RP_AMQP_QUEUES
              value: "10"
            - name: RP_AMQP_QUEUESPERPOD
              value: "10"
            - name: RP_AMQP_ANALYZER-VHOST
              value: analyzer
            - name: RP_AMQP_HOST
              value: rabbitmq
            - name: RP_AMQP_PORT
              value: "5672"
            - name: RP_AMQP_USER
              valueFrom:
                secretKeyRef:
                  key: RABBITMQ_USERNAME
                  name: rabbitmq
            - name: RP_AMQP_PASS
              valueFrom:
                secretKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: rabbitmq
            - name: RP_AMQP_APIHOST
              value: rabbitmq
            - name: RP_AMQP_APIPORT
              value: "15672"
            - name: RP_AMQP_APIUSER
              valueFrom:
                secretKeyRef:
                  key: RABBITMQ_USERNAME
                  name: rabbitmq
            - name: RP_AMQP_APIPASS
              valueFrom:
                secretKeyRef:
                  key: RABBITMQ_PASSWORD
                  name: rabbitmq
            - name: RP_DB_HOST
              value: postgres
            - name: RP_DB_PORT
              value: "5432"
            - name: RP_DB_NAME
              value: reportportal
            - name: RP_DB_USER
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_USER
                  name: postgres-user
            - name: RP_DB_PASS
              valueFrom:
                secretKeyRef:
                  key: POSTGRES_PASSWORD
                  name: postgres-user
            - name: RP_BINARYSTORE_TYPE
              value: minio
            - name: RP_BINARYSTORE_MINIO_ENDPOINT
              value: http://minio:9000
            - name: RP_BINARYSTORE_MINIO_ACCESSKEY
              valueFrom:
                secretKeyRef:
                  key: MINIO_ROOT_USER
                  name: minio
            - name: RP_BINARYSTORE_MINIO_SECRETKEY
              valueFrom:
                secretKeyRef:
                  key: MINIO_ROOT_PASSWORD
                  name: minio
            - name: MANAGEMENT_HEALTH_ELASTICSEARCH_ENABLED
              value: "false"
          image: service-api
          name: api
          ports:
            - containerPort: 8585
              protocol: TCP
          resources:
            limits: { }
            requests:
              cpu: 25m
              memory: 64Mi
          readinessProbe:
            httpGet:
              path: /health
              port: 8585
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          livenessProbe:
            httpGet:
              path: /health
              port: 8585
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 5
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
